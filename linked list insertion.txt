//linked list
#include <iostream>
using namespace std;
class nodes{
    public:
    int data;
    nodes *next;
    nodes (int data){
        this-> data = data;
        this->next = NULL;
    }
};
void insertionathead(nodes * &head,int d){
    nodes *temp = new nodes(d);
    temp->next = head;
    head=temp;
}
void print(nodes * &head){
    nodes *temp = head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}
void insertattail(nodes * &tail,int d){
    nodes *temp = new nodes(d);
    tail->next = temp;
   // temp->next = NULL;
    tail = temp;
}
void insertatmiddle(int d,nodes * &tail,nodes * &head,int position){
    nodes *nodetoinsert = new nodes(d);
    nodes *temp = head;
    if(position==1){
        insertionathead(head,d);
        return;
    } 
    if(temp->next==NULL){
        insertattail(tail,d);
        return;
    }
    int count=1;
    while(count<position-1){
        temp=temp->next;
        count++;
    }
    nodetoinsert->next = temp->next;
    temp->next = nodetoinsert;
    
}
int main()
{
    nodes *node1=new nodes(10);
   // cout<<node1->next<<endl;
   nodes *head = node1;
   nodes *tail = node1;
   //print(head);
   //insertionathead(head,12);
   //print(head);
   //insertionathead(head,14);
   //print(head);
   insertattail(tail,12);
   insertattail(tail,14);
   insertattail(tail,16);
   insertatmiddle(22,tail,head,3);
   print(head);
    
    

    return 0;
}